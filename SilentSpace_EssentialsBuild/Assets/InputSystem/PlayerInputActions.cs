//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""45d385e8-c7cc-4d13-a84b-f1585389c971"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""411923d6-570a-45cd-a7bc-b3c8f36df896"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMovement"",
                    ""type"": ""Value"",
                    ""id"": ""0feec4a6-3311-4e13-908b-c7a7082eff3b"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""14f42ffb-243e-4c25-9dac-b0f8b372f08c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1.401298E-45)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3d9e3544-3b62-4e32-9cf6-5e49ce2e9672"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPause"",
                    ""type"": ""Button"",
                    ""id"": ""2ee00ea2-9802-4f74-839a-1430e22cacd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenJournal"",
                    ""type"": ""Button"",
                    ""id"": ""2aacb807-f67e-492c-8733-7ae10acae0a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""fee229ed-fb0a-4518-866e-12c74598930f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1.401298E-45)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6010d01a-d3ed-4230-bcc1-93941b0543b7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a4d0a280-c772-477a-98da-c00de84a869f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""38f0a6d0-d1c6-48d4-a203-673ef8c5f61a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e492f0b-15c9-493d-a353-5b7cf090c0f9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dd1ae6b9-5375-45d0-8734-cf7077d1d2cd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6961dcd4-38e6-47fe-be13-e5d9f0cce870"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0f2c182-f6e8-49f0-8895-28dd17e4e90a"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6299061c-72c4-42c1-a11c-5c57527ced41"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0b7fe61-29d6-42ae-bf36-5bbe4e2636a4"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59ef07f3-4734-4da2-8b05-46a6090711c6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71dae275-05c4-46bd-9c2a-361ac05ecf26"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0a34fa8-0b0a-49af-be78-d88967688de1"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenJournal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIControls"",
            ""id"": ""346363e0-9df1-417c-91c7-15beebf9d8b7"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""039a9fcc-50e3-452b-bac7-b915f9f4626a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""cb09a224-1fa3-45ac-ac58-7d08b9663b10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""c9b8a366-2785-475b-bb94-a71ed8d355c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""40eb92b7-b706-4a41-99ca-3ec0b5c18c6d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1248c7dc-049d-4d45-9ef7-e60fd028edbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""27a65ffc-a08b-4d37-a368-66357bf7410d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b1cd2b38-c30c-4c31-bd2c-9331079552c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c0ab4865-7947-4c26-8f4b-60818fa4f2a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""791987bd-95e8-4b33-9803-717506bdb278"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a1df8024-e0ac-4139-be98-e60abac88ae1"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""fe79d883-d855-4ad6-8a17-e860f1d18d2d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2f3c13f2-1a01-42a9-b1ae-82c2cfbc017d"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bf71af79-3eef-4771-8ca9-317782296a71"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""41c0f5a7-05bc-4aca-87fa-9e8d81e354a1"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7f0d3a60-c224-452a-be6d-87968c5d78ea"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""790fc394-bf2f-4a93-91c0-3df1d444f235"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f5f41db-80af-4a0d-87c3-576c171e01fa"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e0ffca28-a8b6-4b7c-b99f-313177d10d4a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b6c9e3a-d152-4a22-94bf-e8b133ab7206"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""08764556-e7b7-4eb8-814b-9e377f883452"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""87609fc1-b8b7-4b77-9454-8b99003d8280"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6f2c7b7f-a593-4ef0-9b10-f4a00038433d"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a85b6fd-993e-4407-975c-c3e664a16feb"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""882b1d41-52aa-4698-b146-7200f977cead"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""70f418ed-1526-4495-a1ae-ac7eeb2b3531"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""cbd2915f-6e42-4dee-a0d7-241fa2497c3e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36efeab1-88ff-45bf-ba55-a7ff035bb29a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1ea06ac-bbe6-4b0f-abbe-bd26fd791191"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6e9d4e22-f5db-45e3-b7f6-b7695d49d3fc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cfef355c-1c8e-4ec7-af21-da300ce47946"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a2027873-d88a-4a71-8b17-b03c4e626615"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6145bae8-8645-4a74-9dc6-9c3a720c100c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""609575eb-57a7-43be-aa80-ee1aa5565efa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4eb96285-1062-4998-a5e3-e1ded73bdbc5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b8b1c72-a751-41a1-a218-fd40af9045f9"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8e6346c-2e40-490a-aa40-5acd33ccf0b2"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86862de2-22e8-4dba-abe1-61bacd11e5fe"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fed4f72-423e-47f7-9dc0-4e8c4595020f"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d6b5b65-4892-401f-9376-1a858820061c"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66bb25a4-5220-4509-b2ca-b1d87e2ffab2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""394a8a87-0aff-40f4-8344-37415dbccab7"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d83650d-dede-4012-96c7-85bb361dc193"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""499e7c71-db8d-4cf5-a048-363c1bda505b"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baf2c6b3-a655-4d5a-b59e-a0c737c0853e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08b5f681-b712-4869-9533-baa76a8983b1"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9330ca9-70b3-4984-a4a6-415d8dcc4a24"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dda32fa6-018d-4cf5-ad4a-7345e3222ead"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8d430d5-eee8-49b2-86ba-47578059c385"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AudioTesting"",
            ""id"": ""ec11c6bb-3cbb-4597-aa26-5933e3609b0e"",
            ""actions"": [
                {
                    ""name"": ""PlayTrack"",
                    ""type"": ""Button"",
                    ""id"": ""819cecf5-e4b6-4892-81d4-708481d27908"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopTrack"",
                    ""type"": ""Button"",
                    ""id"": ""6198e48d-d0d3-4afc-bac0-f548a3f6bbee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartTrack"",
                    ""type"": ""Button"",
                    ""id"": ""de2c3d91-422d-4903-997c-d019582c180d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaySFX"",
                    ""type"": ""Button"",
                    ""id"": ""972ce6e9-fd52-435f-8195-33eb6e249760"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopSFX"",
                    ""type"": ""Button"",
                    ""id"": ""4ca99264-f064-45f5-8862-b5496952bbe5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartSFX"",
                    ""type"": ""Button"",
                    ""id"": ""4ce89200-11e3-444c-bc4a-7c5496353a0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3c979759-a4c8-4ad8-8def-9b0a20ae6beb"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayTrack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2042109b-c094-43da-a5a7-9dbfed3cde95"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopTrack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2589b549-cea4-4ca9-9f28-6ef3e6526626"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartTrack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd398df4-fc53-4db0-bd6a-e6d0cb89e44e"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaySFX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b795591-ede9-49a6-95be-35ce152ab6a4"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopSFX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""878a7c05-3b49-4dc0-8a2f-7f7e13cc868d"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartSFX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Movement = m_PlayerControls.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControls_MouseMovement = m_PlayerControls.FindAction("MouseMovement", throwIfNotFound: true);
        m_PlayerControls_Crouch = m_PlayerControls.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerControls_Interact = m_PlayerControls.FindAction("Interact", throwIfNotFound: true);
        m_PlayerControls_OpenPause = m_PlayerControls.FindAction("OpenPause", throwIfNotFound: true);
        m_PlayerControls_OpenJournal = m_PlayerControls.FindAction("OpenJournal", throwIfNotFound: true);
        m_PlayerControls_Run = m_PlayerControls.FindAction("Run", throwIfNotFound: true);
        // UIControls
        m_UIControls = asset.FindActionMap("UIControls", throwIfNotFound: true);
        m_UIControls_Navigate = m_UIControls.FindAction("Navigate", throwIfNotFound: true);
        m_UIControls_Submit = m_UIControls.FindAction("Submit", throwIfNotFound: true);
        m_UIControls_Cancel = m_UIControls.FindAction("Cancel", throwIfNotFound: true);
        m_UIControls_Point = m_UIControls.FindAction("Point", throwIfNotFound: true);
        m_UIControls_Click = m_UIControls.FindAction("Click", throwIfNotFound: true);
        m_UIControls_ScrollWheel = m_UIControls.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIControls_MiddleClick = m_UIControls.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIControls_RightClick = m_UIControls.FindAction("RightClick", throwIfNotFound: true);
        m_UIControls_TrackedDevicePosition = m_UIControls.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UIControls_TrackedDeviceOrientation = m_UIControls.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // AudioTesting
        m_AudioTesting = asset.FindActionMap("AudioTesting", throwIfNotFound: true);
        m_AudioTesting_PlayTrack = m_AudioTesting.FindAction("PlayTrack", throwIfNotFound: true);
        m_AudioTesting_StopTrack = m_AudioTesting.FindAction("StopTrack", throwIfNotFound: true);
        m_AudioTesting_RestartTrack = m_AudioTesting.FindAction("RestartTrack", throwIfNotFound: true);
        m_AudioTesting_PlaySFX = m_AudioTesting.FindAction("PlaySFX", throwIfNotFound: true);
        m_AudioTesting_StopSFX = m_AudioTesting.FindAction("StopSFX", throwIfNotFound: true);
        m_AudioTesting_RestartSFX = m_AudioTesting.FindAction("RestartSFX", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private IPlayerControlsActions m_PlayerControlsActionsCallbackInterface;
    private readonly InputAction m_PlayerControls_Movement;
    private readonly InputAction m_PlayerControls_MouseMovement;
    private readonly InputAction m_PlayerControls_Crouch;
    private readonly InputAction m_PlayerControls_Interact;
    private readonly InputAction m_PlayerControls_OpenPause;
    private readonly InputAction m_PlayerControls_OpenJournal;
    private readonly InputAction m_PlayerControls_Run;
    public struct PlayerControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerControls_Movement;
        public InputAction @MouseMovement => m_Wrapper.m_PlayerControls_MouseMovement;
        public InputAction @Crouch => m_Wrapper.m_PlayerControls_Crouch;
        public InputAction @Interact => m_Wrapper.m_PlayerControls_Interact;
        public InputAction @OpenPause => m_Wrapper.m_PlayerControls_OpenPause;
        public InputAction @OpenJournal => m_Wrapper.m_PlayerControls_OpenJournal;
        public InputAction @Run => m_Wrapper.m_PlayerControls_Run;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @MouseMovement.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouseMovement;
                @MouseMovement.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouseMovement;
                @MouseMovement.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouseMovement;
                @Crouch.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCrouch;
                @Interact.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnInteract;
                @OpenPause.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenPause;
                @OpenPause.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenPause;
                @OpenPause.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenPause;
                @OpenJournal.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenJournal;
                @OpenJournal.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenJournal;
                @OpenJournal.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnOpenJournal;
                @Run.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
            }
            m_Wrapper.m_PlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MouseMovement.started += instance.OnMouseMovement;
                @MouseMovement.performed += instance.OnMouseMovement;
                @MouseMovement.canceled += instance.OnMouseMovement;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OpenPause.started += instance.OnOpenPause;
                @OpenPause.performed += instance.OnOpenPause;
                @OpenPause.canceled += instance.OnOpenPause;
                @OpenJournal.started += instance.OnOpenJournal;
                @OpenJournal.performed += instance.OnOpenJournal;
                @OpenJournal.canceled += instance.OnOpenJournal;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
            }
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);

    // UIControls
    private readonly InputActionMap m_UIControls;
    private IUIControlsActions m_UIControlsActionsCallbackInterface;
    private readonly InputAction m_UIControls_Navigate;
    private readonly InputAction m_UIControls_Submit;
    private readonly InputAction m_UIControls_Cancel;
    private readonly InputAction m_UIControls_Point;
    private readonly InputAction m_UIControls_Click;
    private readonly InputAction m_UIControls_ScrollWheel;
    private readonly InputAction m_UIControls_MiddleClick;
    private readonly InputAction m_UIControls_RightClick;
    private readonly InputAction m_UIControls_TrackedDevicePosition;
    private readonly InputAction m_UIControls_TrackedDeviceOrientation;
    public struct UIControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UIControls_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIControls_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIControls_Cancel;
        public InputAction @Point => m_Wrapper.m_UIControls_Point;
        public InputAction @Click => m_Wrapper.m_UIControls_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UIControls_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIControls_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIControls_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UIControls_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UIControls_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UIControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControlsActions set) { return set.Get(); }
        public void SetCallbacks(IUIControlsActions instance)
        {
            if (m_Wrapper.m_UIControlsActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_UIControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public UIControlsActions @UIControls => new UIControlsActions(this);

    // AudioTesting
    private readonly InputActionMap m_AudioTesting;
    private IAudioTestingActions m_AudioTestingActionsCallbackInterface;
    private readonly InputAction m_AudioTesting_PlayTrack;
    private readonly InputAction m_AudioTesting_StopTrack;
    private readonly InputAction m_AudioTesting_RestartTrack;
    private readonly InputAction m_AudioTesting_PlaySFX;
    private readonly InputAction m_AudioTesting_StopSFX;
    private readonly InputAction m_AudioTesting_RestartSFX;
    public struct AudioTestingActions
    {
        private @PlayerInputActions m_Wrapper;
        public AudioTestingActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayTrack => m_Wrapper.m_AudioTesting_PlayTrack;
        public InputAction @StopTrack => m_Wrapper.m_AudioTesting_StopTrack;
        public InputAction @RestartTrack => m_Wrapper.m_AudioTesting_RestartTrack;
        public InputAction @PlaySFX => m_Wrapper.m_AudioTesting_PlaySFX;
        public InputAction @StopSFX => m_Wrapper.m_AudioTesting_StopSFX;
        public InputAction @RestartSFX => m_Wrapper.m_AudioTesting_RestartSFX;
        public InputActionMap Get() { return m_Wrapper.m_AudioTesting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AudioTestingActions set) { return set.Get(); }
        public void SetCallbacks(IAudioTestingActions instance)
        {
            if (m_Wrapper.m_AudioTestingActionsCallbackInterface != null)
            {
                @PlayTrack.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlayTrack;
                @PlayTrack.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlayTrack;
                @PlayTrack.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlayTrack;
                @StopTrack.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopTrack;
                @StopTrack.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopTrack;
                @StopTrack.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopTrack;
                @RestartTrack.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartTrack;
                @RestartTrack.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartTrack;
                @RestartTrack.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartTrack;
                @PlaySFX.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlaySFX;
                @PlaySFX.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlaySFX;
                @PlaySFX.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnPlaySFX;
                @StopSFX.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopSFX;
                @StopSFX.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopSFX;
                @StopSFX.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnStopSFX;
                @RestartSFX.started -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartSFX;
                @RestartSFX.performed -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartSFX;
                @RestartSFX.canceled -= m_Wrapper.m_AudioTestingActionsCallbackInterface.OnRestartSFX;
            }
            m_Wrapper.m_AudioTestingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayTrack.started += instance.OnPlayTrack;
                @PlayTrack.performed += instance.OnPlayTrack;
                @PlayTrack.canceled += instance.OnPlayTrack;
                @StopTrack.started += instance.OnStopTrack;
                @StopTrack.performed += instance.OnStopTrack;
                @StopTrack.canceled += instance.OnStopTrack;
                @RestartTrack.started += instance.OnRestartTrack;
                @RestartTrack.performed += instance.OnRestartTrack;
                @RestartTrack.canceled += instance.OnRestartTrack;
                @PlaySFX.started += instance.OnPlaySFX;
                @PlaySFX.performed += instance.OnPlaySFX;
                @PlaySFX.canceled += instance.OnPlaySFX;
                @StopSFX.started += instance.OnStopSFX;
                @StopSFX.performed += instance.OnStopSFX;
                @StopSFX.canceled += instance.OnStopSFX;
                @RestartSFX.started += instance.OnRestartSFX;
                @RestartSFX.performed += instance.OnRestartSFX;
                @RestartSFX.canceled += instance.OnRestartSFX;
            }
        }
    }
    public AudioTestingActions @AudioTesting => new AudioTestingActions(this);
    public interface IPlayerControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseMovement(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenPause(InputAction.CallbackContext context);
        void OnOpenJournal(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
    public interface IUIControlsActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IAudioTestingActions
    {
        void OnPlayTrack(InputAction.CallbackContext context);
        void OnStopTrack(InputAction.CallbackContext context);
        void OnRestartTrack(InputAction.CallbackContext context);
        void OnPlaySFX(InputAction.CallbackContext context);
        void OnStopSFX(InputAction.CallbackContext context);
        void OnRestartSFX(InputAction.CallbackContext context);
    }
}
